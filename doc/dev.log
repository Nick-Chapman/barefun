Barefun project log...

Wed 12 Feb 2025 : setup barefun repo; init from quarter forth; reduce to minimal get/put char repl
Thu 13 Feb 2025 : by hand x86; manage own continuation; small readline example with heap allocated chars
Fri 14 Feb 2025 :

Mon 17 Feb 2025 :
Tue 18 Feb 2025 :
Wed 19 Feb 2025 :
Thu 20 Feb 2025 :
Fri 21 Feb 2025 :

Mon 24 Feb 2025 :
Tue 25 Feb 2025 :
Wed 26 Feb 2025 :
Thu 27 Feb 2025 :
Fri 28 Feb 2025 :

Mon 03 Mar 2025 :
Tue 04 Mar 2025 :
Wed 05 Mar 2025 :
Thu 06 Mar 2025 :
Fri 07 Mar 2025 : repl/readline example in ocaml

Mon 10 Mar 2025 : begin haskell compiler: Ast,Parser,Pretty-printer
Tue 11 Mar 2025 : haskell evaluation
Wed 12 Mar 2025 : [BIRTHDAY] drive ocaml/haskell from same examples; refactoring
Thu 13 Mar 2025 : examples and parsing; ocaml no pervasives; evaluation: cids -> tags
Fri 14 Mar 2025 : examples and parsing

Mon 17 Mar 2025 : burn bootable USB stick ; setup for multiple x86 examples; enter protected mode; write char to video memory
Tue 18 Mar 2025 : dune/cram setup; stage1 (Ast->simple Exp); fvs: remove unused defs
Wed 19 Mar 2025 : stage2: ANF
Thu 20 Mar 2025 : refactoring; compute/show free vars after stage2 -- too many!
Fri 21 Mar 2025 : (day off)

Mon 24 Mar 2025 : setup expected compilation tests; stage3: locate vars and lift globals
Tue 25 Mar 2025 : improve pp for compiler output; track positions; examples: ^D in shell & rev; project README; prep for normalization
Wed 26 Mar 2025 : begin code normalization pass: walk tree, uniquify; BID: track position of every binding occurrence; parse: list syntax
Thu 27 Mar 2025 : reconstruct docs/dev.log ; first cut normalization: inlining!
Fri 28 Mar 2025 : instrument haskell eval; improve ANF

Mon 31 Mar 2025 : instrument norm; improve globalization, cleanup
Tue 01 Apr 2025 : thrice example; constant folding (needs Wrap/Reset)
Wed 02 Apr 2025 : dune automation; evenodd/tree; stages 0(AST),1(EXP),2(NBE),3(ANF),4(CCF)... begin stage 5(ASM)
Thu 03 Apr 2025 : stage5: compilation
Fri 04 Apr 2025 : stage5: execution - first example works: tiny

Mon 07 Apr 2025 : stage5: more examples. towards fib.. debugging hell: put_int
Tue 08 Apr 2025 : stage5: fixed put_int [Brighton]
Wed 09 Apr 2025 : stage5: all examples working! now improvements...
Thu 10 Apr 2025 : [national history museum]
Fri 11 Apr 2025 : buffer/implode; sham.fun

Mon 14 Apr 2025 : static data for globals - took 3 attempts!
Tue 15 Apr 2025 : cleanup. first examples running in qemu.. upto "smaller.fun"
Wed 16 Apr 2025 :
Thu 17 Apr 2025 : **Romania
Fri 18 Apr 2025 : **Romania

Mon 21 Apr 2025 : **Romania
Tue 22 Apr 2025 :
Wed 23 Apr 2025 : filesystem... disk, read/write sectors, cache last sector, read/write blocks
Thu 24 Apr 2025 : improved string rep; run more examples under qemu; litter README.md
Fri 25 Apr 2025 : eval-same (all examples/stages); print_all_chars example; reorg test
Sat 26 Apr 2025 : sham working on real h/w

Mon 28 Apr 2025 : packed string rep
Tue 29 Apr 2025 : GC... reachability (in stage5) working
Wed 30 Apr 2025 : read3 example, -ppp/-ppu, x86 mul, Si for Temp(1); reduce reg moves
Thu 01 May 2025 : GC evacuate&scavenge (stage5)... all day.. YES, first cut working in stage5
Fri 02 May 2025 : cleanup; split stage5 code; GC only when need
Sat 03 May 2025 : compute needed
Sun 04 May 2025 : 2n+1 tagging... Think I have it working!

Mon 05 May 2025 : BANK HOL
Tue 06 May 2025 : DAY OFF
Wed 07 May 2025 : explore x86 interrups: PIC,PIT, cli/sti/hlt
Thu 08 May 2025 :
Fri 09 May 2025 :
